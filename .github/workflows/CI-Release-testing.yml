# This is a basic workflow to help you get started with Actions

name: CI-Release-testing
# Watch Policy branch
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

permissions:
  id-token: write
  contents: read
jobs:
  handle-conjur:
    runs-on: [ubuntu-latest]
    steps:
      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11
        with:
          fetch-depth: 0
      - name: Onboard to Conjur
        env:
          CONJUR_URL: "https://mckesson-prod.secretsmgr.cyberark.cloud/api"
          CONJUR_RETRIEVE_URL: "https://mckesson-prod.secretsmgr.cyberark.cloud/api/secrets"
          CONJUR_ACCOUNT: "conjur"
          CONJUR_SERVICE_ID: "github"
          VARIABLE_ID: "variable/data/vault/keys-copay-storage-dev/Cloud Service-GCPServiceKey-copay-storage-dev-9304-1@gis-iam-prod-3d6b.iam.gserviceaccount.com/password"
          #CONJUR_RETRIEVE_URL: "$CONJUR_URL/secrets/$CONJUR_ACCOUNT/$VARIABLE_ID"
        run: |
          echo "Retrieving JWT Token from Github"
          GIT_TOKEN=$(curl -H "Authorization:bearer $ACTIONS_ID_TOKEN_REQUEST_TOKEN" "$ACTIONS_ID_TOKEN_REQUEST_URL" | jq -r .value)
          echo "Authenticating to Conjur"
          #SESSION_TOKEN=$(curl --request POST "$CONJUR_URL/authn-jwt/$CONJUR_SERVICE_ID/$CONJUR_ACCOUNT/authenticate" --header "Content-Type: application/x-www-form-urlencoded" --header "Accept-Encoding: base64" --data-urlencode "jwt=$GIT_TOKEN")
          SESSION_TOKEN=$(curl "$CONJUR_URL/authn/$CONJUR_ACCOUNT/host%2Fdata%2FAS10317-CMMCopay-GithubAPI/authenticate" -H "Accept-Encoding:base64" -d "${{secrets.CONJUR_API_KEY}}")
          #output=$(curl -H "Authorization:Token token=\"${SESSION_TOKEN}\"" "$CONJUR_RETRIEVE_URL/$CONJUR_ACCOUNT/$VARIABLE_ID")
          #output=$(curl -H "Authorization:Token token=\"${SESSION_TOKEN}\"" "$CONJUR_URL/secrets/conjur/variable/data/vault/N-CJ-CMMCopayTEST/Cloud Service-GCPServiceKey-TEST@gis-iam-prod-3d6b.iam.gserviceaccount.com/password")
          output=$(curl -H "Authorization: Token token=\"${SESSION_TOKEN}\"" "https://mckesson-prod.secretsmgr.cyberark.cloud/api/secrets/conjur/variable/data/vault/keys-copay-storage-dev/Cloud%20Service-GCPServiceKey-copay-storage-dev-9304-1@gis-iam-prod-3d6b.iam.gserviceaccount.com/password"  | jq )
          echo $output | jq

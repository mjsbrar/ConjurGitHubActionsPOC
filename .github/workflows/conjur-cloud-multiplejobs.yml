name: conjur-cloud-multiplejobs

# Controls when the workflow will run
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  fetch-secrets:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    outputs:
      secret1: ${{ steps.export.outputs.secret1 }}
      secret2: ${{ steps.export.outputs.secret2 }}
    steps:
      - name: Import Secrets using CyberArk Conjur Secret Fetcher Action
        id: conjur
        uses: cyberark/conjur-action@v2.0.5
        with:
          url: ${{ vars.CONJUR_URL }}
          account: ${{ vars.CONJUR_ACCOUNT }}
          authn_id: ${{ vars.CONJUR_JWT_AUTHN_ID }}
          secrets: ${{ vars.CONJUR_SECRET_ID_1 }}|SECRET_1;${{ vars.CONJUR_SECRET_ID_2 }}|SECRET_2
      
      - name: Export secrets as outputs
        id: export
        run: |
          echo "::add-mask::$SECRET_1"
          echo "::add-mask::$SECRET_2"
          echo "::set-output name=secret1::$SECRET_1"
          echo "::set-output name=secret2::$SECRET_2

  use-secrets:
    needs: fetch-secrets
    runs-on: ubuntu-latest
    env:
      SECRET_1: ${{ needs.fetch-secrets.outputs.secret1 }}
      SECRET_2: ${{ needs.fetch-secrets.outputs.secret2 }}
    steps:
      - name: Use secrets from previous job
        run: |
          echo "Secret 1: ${{ needs.fetch-secrets.outputs.secret1 }}"
          echo "Secret 2: ${{ needs.fetch-secrets.outputs.secret2 }}"
         
      - name: 'echo secrets'
        run: |
          echo "Using SECRET_1 and SECRET_2 inside the container"
          echo "SECRET_1 is $SECRET_1"
          echo "SECRET_2 is $SECRET_2"
      
      - name: 'capture to file'
        run: |
          echo "output file" >> /tmp/output.txt
          echo "vars.CONJUR_URL: ${{ vars.CONJUR_URL }}" >> /tmp/output.txt
          echo "vars.CONJUR_ACCOUNT: ${{ vars.CONJUR_ACCOUNT }}" >> /tmp/output.txt
          echo "vars.CONJUR_JWT_AUTHN_ID: ${{ vars.CONJUR_JWT_AUTHN_ID }}" >> /tmp/output.txt
          echo "vars.CONJUR_SECRET_ID_1: ${{ vars.CONJUR_SECRET_ID_1 }}" >> /tmp/output.txt
          echo "vars.CONJUR_SECRET_ID_2: ${{ vars.CONJUR_SECRET_ID_2 }}" >> /tmp/output.txt
          echo "SECRET_1: $SECRET_1" >> /tmp/output.txt
          echo "SECRET_2: $SECRET_2" >> /tmp/output.txt
          echo "" >> /tmp/output.txt
          echo "env: " >> /tmp/output.txt
          env >> /tmp/output.txt

      - name: 'upload artifact output.txt'
        uses: actions/upload-artifact@v4
        with:
          name: output.txt
          path: /tmp/output.txt
          retention-days: 90
